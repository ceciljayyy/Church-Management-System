{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/nanac/INFINITIA/CMS/client/src/components/Button.tsx"],"sourcesContent":["type ButtonProps = {\r\n  label: string;\r\n  onClick?: () => void;\r\n};\r\n\r\nexport default function Button({ label, onClick }: ButtonProps) {\r\n  return (\r\n    <button\r\n      onClick={onClick}\r\n      className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition\"\r\n    >\r\n      {label}\r\n    </button>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;;AAKe,SAAS,OAAO,EAAE,KAAK,EAAE,OAAO,EAAe;IAC5D,qBACE,wPAAC;QACC,SAAS;QACT,WAAU;kBAET;;;;;;AAGP","debugId":null}},
    {"offset": {"line": 25, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/nanac/INFINITIA/CMS/client/src/components/SidebarToggle.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { RootState, AppDispatch } from \"../state/store\";\r\nimport { toggleSidebar } from \"../state/globalSlice\";\r\n\r\nexport default function SidebarToggle() {\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  const isSidebarCollapsed = useSelector(\r\n    (state: RootState) => state.global.isSidebarCollapsed\r\n  );\r\n\r\n  return (\r\n    <div className=\"p-4\">\r\n      <button\r\n        onClick={() => dispatch(toggleSidebar())}\r\n        className=\"px-4 py-2 bg-blue-600 text-white rounded-md\"\r\n      >\r\n        {isSidebarCollapsed ? \"Expand Sidebar\" : \"Collapse Sidebar\"}\r\n      </button>\r\n\r\n      <p className=\"mt-2 text-gray-700\">\r\n        Sidebar is <strong>{isSidebarCollapsed ? \"Collapsed\" : \"Expanded\"}</strong>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;AAEA;AAEA;AAJA;;;;AAMe,SAAS;IACtB,MAAM,WAAW,IAAA,kLAAW;IAC5B,MAAM,qBAAqB,IAAA,kLAAW,EACpC,CAAC,QAAqB,MAAM,MAAM,CAAC,kBAAkB;IAGvD,qBACE,wPAAC;QAAI,WAAU;;0BACb,wPAAC;gBACC,SAAS,IAAM,SAAS,IAAA,sJAAa;gBACrC,WAAU;0BAET,qBAAqB,mBAAmB;;;;;;0BAG3C,wPAAC;gBAAE,WAAU;;oBAAqB;kCACrB,wPAAC;kCAAQ,qBAAqB,cAAc;;;;;;;;;;;;;;;;;;AAI/D","debugId":null}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/nanac/INFINITIA/CMS/client/src/components/Sidebar/index.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport * as Tooltip from \"@radix-ui/react-tooltip\";\r\nimport {\r\n  BookOpen,\r\n  Calendar,\r\n  Church,\r\n  DollarSign,\r\n  Layout,\r\n  LucideIcon,\r\n  Menu,\r\n  SlidersHorizontal,\r\n  Users,\r\n} from \"lucide-react\";\r\n\r\nimport Link from \"next/link\";\r\nimport { usePathname } from \"next/navigation\";\r\nimport React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"@/state/store\";   // <-- adjust import path\r\nimport { toggleSidebar } from \"@/state/globalSlice\"; // <-- adjust import path\r\n\r\ninterface SidebarLinkProps {\r\n  href: string;\r\n  icon: LucideIcon;\r\n  label: string;\r\n  isCollapsed: boolean;\r\n}\r\n\r\nconst SidebarLink = ({ href, icon: Icon, label, isCollapsed }: SidebarLinkProps) => {\r\n  const pathname = usePathname();\r\n  const isActive = pathname === href || (pathname === \"/\" && href === \"/dashboard\");\r\n\r\n  const linkContent = (\r\n    <div\r\n      className={`cursor-pointer flex items-center ${\r\n        isCollapsed ? \"justify-center py-4\" : \"justify-start px-8 py-4\"\r\n      }\r\n      hover:text-blue-500 hover:bg-blue-100 gap-3 transition-colors ${\r\n        isActive ? \"bg-blue-200 text-white\" : \"\"\r\n      }`}\r\n    >\r\n      <Icon className=\"w-6 h-6 !text-gray-700\" />\r\n      {!isCollapsed && <span className=\"font-medium text-gray-700\">{label}</span>}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Link href={href}>\r\n      {isCollapsed ? (\r\n        <Tooltip.Provider delayDuration={200}>\r\n          <Tooltip.Root>\r\n            <Tooltip.Trigger asChild>{linkContent}</Tooltip.Trigger>\r\n            <Tooltip.Content\r\n              side=\"right\"\r\n              className=\"bg-gray-900 text-white px-2 py-1 rounded text-sm shadow-lg\"\r\n            >\r\n              {label}\r\n              <Tooltip.Arrow className=\"fill-gray-900\" />\r\n            </Tooltip.Content>\r\n          </Tooltip.Root>\r\n        </Tooltip.Provider>\r\n      ) : (\r\n        linkContent\r\n      )}\r\n    </Link>\r\n  );\r\n};\r\n\r\nconst Sidebar = () => {\r\n  const dispatch = useDispatch();\r\n  const isSidebarCollapsed = useSelector(\r\n    (state: RootState) => state.global.isSidebarCollapsed\r\n  );\r\n\r\n  const sidebarClassNames = `fixed flex flex-col ${\r\n    isSidebarCollapsed ? \"w-16\" : \"w-72\"\r\n  } bg-white transition-all duration-300 h-full shadow-md z-40`;\r\n\r\n  return (\r\n    <div className={sidebarClassNames}>\r\n      {/* TOP LOGO + TOGGLE */}\r\n      <div\r\n        className={`flex gap-3 justify-between items-center pt-8 ${\r\n          isSidebarCollapsed ? \"px-2\" : \"px-6\"\r\n        }`}\r\n      >\r\n        {!isSidebarCollapsed && <h1 className=\"font-extrabold text-2xl\">Church CMS</h1>}\r\n\r\n        <button\r\n          className=\"px-3 py-3 bg-gray-100 rounded-full hover:bg-blue-100\"\r\n          onClick={() => dispatch(toggleSidebar())}\r\n        >\r\n          <Menu className=\"w-4 h-4\" />\r\n        </button>\r\n      </div>\r\n\r\n      {/* LINKS */}\r\n      <div className=\"flex-grow mt-8\">\r\n        <SidebarLink href=\"/dashboard\" icon={Layout} label=\"Dashboard\" isCollapsed={isSidebarCollapsed} />\r\n        <SidebarLink href=\"/members\" icon={Users} label=\"Members\" isCollapsed={isSidebarCollapsed} />\r\n        <SidebarLink href=\"/events\" icon={Calendar} label=\"Events\" isCollapsed={isSidebarCollapsed} />\r\n        <SidebarLink href=\"/ministries\" icon={Church} label=\"Ministries\" isCollapsed={isSidebarCollapsed} />\r\n        <SidebarLink href=\"/sermons\" icon={BookOpen} label=\"Sermons\" isCollapsed={isSidebarCollapsed} />\r\n        <SidebarLink href=\"/finances\" icon={DollarSign} label=\"Finances\" isCollapsed={isSidebarCollapsed} />\r\n        <SidebarLink href=\"/settings\" icon={SlidersHorizontal} label=\"Settings\" isCollapsed={isSidebarCollapsed} />\r\n      </div>\r\n\r\n      {/* FOOTER */}\r\n      {!isSidebarCollapsed && (\r\n        <div className=\"mb-10\">\r\n          <p className=\"text-center text-xs text-gray-500\">\r\n            &copy; {new Date().getFullYear()} Church CMS\r\n          </p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AAEA;AAEA,yOAAqD,yBAAyB;AApB9E;;;;;;;;AA6BA,MAAM,cAAc,CAAC,EAAE,IAAI,EAAE,MAAM,IAAI,EAAE,KAAK,EAAE,WAAW,EAAoB;IAC7E,MAAM,WAAW,IAAA,2JAAW;IAC5B,MAAM,WAAW,aAAa,QAAS,aAAa,OAAO,SAAS;IAEpE,MAAM,4BACJ,wPAAC;QACC,WAAW,CAAC,iCAAiC,EAC3C,cAAc,wBAAwB,0BACvC;oEAC6D,EAC5D,WAAW,2BAA2B,IACtC;;0BAEF,wPAAC;gBAAK,WAAU;;;;;;YACf,CAAC,6BAAe,wPAAC;gBAAK,WAAU;0BAA6B;;;;;;;;;;;;IAIlE,qBACE,wPAAC,iLAAI;QAAC,MAAM;kBACT,4BACC,wPAAC,yLAAgB;YAAC,eAAe;sBAC/B,cAAA,wPAAC,qLAAY;;kCACX,wPAAC,wLAAe;wBAAC,OAAO;kCAAE;;;;;;kCAC1B,wPAAC,wLAAe;wBACd,MAAK;wBACL,WAAU;;4BAET;0CACD,wPAAC,sLAAa;gCAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;uDAK/B;;;;;;AAIR;AAEA,MAAM,UAAU;IACd,MAAM,WAAW,IAAA,kLAAW;IAC5B,MAAM,qBAAqB,IAAA,kLAAW,EACpC,CAAC,QAAqB,MAAM,MAAM,CAAC,kBAAkB;IAGvD,MAAM,oBAAoB,CAAC,oBAAoB,EAC7C,qBAAqB,SAAS,OAC/B,2DAA2D,CAAC;IAE7D,qBACE,wPAAC;QAAI,WAAW;;0BAEd,wPAAC;gBACC,WAAW,CAAC,6CAA6C,EACvD,qBAAqB,SAAS,QAC9B;;oBAED,CAAC,oCAAsB,wPAAC;wBAAG,WAAU;kCAA0B;;;;;;kCAEhE,wPAAC;wBACC,WAAU;wBACV,SAAS,IAAM,SAAS,IAAA,sJAAa;kCAErC,cAAA,wPAAC,oNAAI;4BAAC,WAAU;;;;;;;;;;;;;;;;;0BAKpB,wPAAC;gBAAI,WAAU;;kCACb,wPAAC;wBAAY,MAAK;wBAAa,MAAM,yOAAM;wBAAE,OAAM;wBAAY,aAAa;;;;;;kCAC5E,wPAAC;wBAAY,MAAK;wBAAW,MAAM,uNAAK;wBAAE,OAAM;wBAAU,aAAa;;;;;;kCACvE,wPAAC;wBAAY,MAAK;wBAAU,MAAM,gOAAQ;wBAAE,OAAM;wBAAS,aAAa;;;;;;kCACxE,wPAAC;wBAAY,MAAK;wBAAc,MAAM,0NAAM;wBAAE,OAAM;wBAAa,aAAa;;;;;;kCAC9E,wPAAC;wBAAY,MAAK;wBAAW,MAAM,oOAAQ;wBAAE,OAAM;wBAAU,aAAa;;;;;;kCAC1E,wPAAC;wBAAY,MAAK;wBAAY,MAAM,0OAAU;wBAAE,OAAM;wBAAW,aAAa;;;;;;kCAC9E,wPAAC;wBAAY,MAAK;wBAAY,MAAM,+PAAiB;wBAAE,OAAM;wBAAW,aAAa;;;;;;;;;;;;YAItF,CAAC,oCACA,wPAAC;gBAAI,WAAU;0BACb,cAAA,wPAAC;oBAAE,WAAU;;wBAAoC;wBACvC,IAAI,OAAO,WAAW;wBAAG;;;;;;;;;;;;;;;;;;AAM7C;uCAEe","debugId":null}},
    {"offset": {"line": 349, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/nanac/INFINITIA/CMS/client/src/app/page.tsx"],"sourcesContent":["\"use client\";\nimport Button from \"@/components/Button\";\nimport SidebarToggle from \"@/components/SidebarToggle\";\nimport Sidebar from \"@/components/Sidebar\";\n\nexport default function Home() {\n  return (\n    \n    <div className=\"flex\">\n      {/* Sidebar */}\n      <Sidebar />\n      \n      {/* Main Content */}\n\n      <main className=\"flex min-h-screen flex-col items-center justify-center\">\n        <h1 className=\"text-5xl font-extrabold text-red-500\">Hello Tailwind</h1>\n        <SidebarToggle />\n        <Button label=\"Get Started\" onClick={() => alert(\"Clicked!\")} />\n      </main>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;;AACA;AACA;AACA;AAHA;;;;;AAKe,SAAS;IACtB,qBAEE,wPAAC;QAAI,WAAU;;0BAEb,wPAAC,2JAAO;;;;;0BAIR,wPAAC;gBAAK,WAAU;;kCACd,wPAAC;wBAAG,WAAU;kCAAuC;;;;;;kCACrD,wPAAC,wJAAa;;;;;kCACd,wPAAC,iJAAM;wBAAC,OAAM;wBAAc,SAAS,IAAM,MAAM;;;;;;;;;;;;;;;;;;AAIzD","debugId":null}}]
}