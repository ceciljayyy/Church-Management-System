{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/nanac/INFINITIA/CMS/client/src/state/api.ts"],"sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\nexport const api = createApi({\r\n  reducerPath: \"api\",\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: process.env.NEXT_PUBLIC_API_BASE_URL || \"http://localhost:8080\", // your Go backend\r\n  }),\r\n  tagTypes: [\r\n    \"Auth\",\r\n    \"Members\",\r\n    \"Leaders\",\r\n    \"Groups\",\r\n    \"Attendance\",\r\n    \"Events\",\r\n    \"Donations\",\r\n    \"Expenses\",\r\n    \"Announcements\",\r\n    \"DashboardMetrics\",\r\n  ],\r\n  endpoints: (builder) => ({\r\n    // Weâ€™ll add actual queries/mutations later\r\n    getMembers: builder.query<any[], void>({\r\n      query: () => \"/members\",\r\n      providesTags: [\"Members\"],\r\n    }),\r\n    getEvents: builder.query<any[], void>({\r\n      query: () => \"/events\",\r\n      providesTags: [\"Events\"],\r\n    }),\r\n    // etc...\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useGetMembersQuery,\r\n  useGetEventsQuery,\r\n} = api;\r\n"],"names":[],"mappings":";;;;;;;;AAKa;AALb;AAAA;;AAEO,MAAM,MAAM,IAAA,4OAAS,EAAC;IAC3B,aAAa;IACb,WAAW,IAAA,+MAAc,EAAC;QACxB,SAAS,qLAAO,CAAC,GAAG,CAAC,wBAAwB,IAAI;IACnD;IACA,UAAU;QACR;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IACD,WAAW,CAAC,UAAY,CAAC;YACvB,2CAA2C;YAC3C,YAAY,QAAQ,KAAK,CAAc;gBACrC,OAAO,IAAM;gBACb,cAAc;oBAAC;iBAAU;YAC3B;YACA,WAAW,QAAQ,KAAK,CAAc;gBACpC,OAAO,IAAM;gBACb,cAAc;oBAAC;iBAAS;YAC1B;QAEF,CAAC;AACH;AAEO,MAAM,EACX,kBAAkB,EAClB,iBAAiB,EAClB,GAAG","debugId":null}},
    {"offset": {"line": 57, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/nanac/INFINITIA/CMS/client/src/state/globalSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\nexport interface GlobalState {\r\n  isSidebarCollapsed: boolean;\r\n  isDarkMode: boolean;\r\n}\r\n\r\nconst initialState: GlobalState = {\r\n  isSidebarCollapsed: false,\r\n  isDarkMode: false,\r\n};\r\n\r\nconst globalSlice = createSlice({\r\n  name: \"global\",\r\n  initialState,\r\n  reducers: {\r\n    setIsSidebarCollapsed: (state, action: PayloadAction<boolean>) => {\r\n      state.isSidebarCollapsed = action.payload;\r\n    },\r\n    toggleSidebar: (state) => {\r\n      state.isSidebarCollapsed = !state.isSidebarCollapsed;\r\n    },\r\n    setIsDarkMode: (state, action: PayloadAction<boolean>) => {\r\n      state.isDarkMode = action.payload;\r\n    },\r\n    toggleDarkMode: (state) => {\r\n      state.isDarkMode = !state.isDarkMode;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setIsSidebarCollapsed,\r\n  toggleSidebar,\r\n  setIsDarkMode,\r\n  toggleDarkMode,\r\n} = globalSlice.actions;\r\n\r\nexport default globalSlice.reducer;\r\n"],"names":[],"mappings":";;;;;;;;;;;;AAAA;;AAOA,MAAM,eAA4B;IAChC,oBAAoB;IACpB,YAAY;AACd;AAEA,MAAM,cAAc,IAAA,uNAAW,EAAC;IAC9B,MAAM;IACN;IACA,UAAU;QACR,uBAAuB,CAAC,OAAO;YAC7B,MAAM,kBAAkB,GAAG,OAAO,OAAO;QAC3C;QACA,eAAe,CAAC;YACd,MAAM,kBAAkB,GAAG,CAAC,MAAM,kBAAkB;QACtD;QACA,eAAe,CAAC,OAAO;YACrB,MAAM,UAAU,GAAG,OAAO,OAAO;QACnC;QACA,gBAAgB,CAAC;YACf,MAAM,UAAU,GAAG,CAAC,MAAM,UAAU;QACtC;IACF;AACF;AAEO,MAAM,EACX,qBAAqB,EACrB,aAAa,EACb,aAAa,EACb,cAAc,EACf,GAAG,YAAY,OAAO;uCAER,YAAY,OAAO","debugId":null}},
    {"offset": {"line": 102, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/nanac/INFINITIA/CMS/client/src/state/store.ts"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { api } from \"./api\";\r\nimport globalReducer from \"./globalSlice\";\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    [api.reducerPath]: api.reducer,\r\n    global: globalReducer,\r\n  },\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware().concat(api.middleware),\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;AAEO,MAAM,QAAQ,IAAA,0NAAc,EAAC;IAClC,SAAS;QACP,CAAC,uIAAG,CAAC,WAAW,CAAC,EAAE,uIAAG,CAAC,OAAO;QAC9B,QAAQ,mJAAa;IACvB;IACA,YAAY,CAAC,uBACX,uBAAuB,MAAM,CAAC,uIAAG,CAAC,UAAU;AAChD","debugId":null}},
    {"offset": {"line": 126, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/nanac/INFINITIA/CMS/client/src/state/Providers.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"@/state/store\";\r\n\r\nexport function Providers({ children }: { children: React.ReactNode }) {\r\n  return <Provider store={store}>{children}</Provider>;\r\n}\r\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAHA;;;;AAKO,SAAS,UAAU,KAA2C;QAA3C,EAAE,QAAQ,EAAiC,GAA3C;IACxB,qBAAO,uMAAC,kLAAQ;QAAC,OAAO,2IAAK;kBAAG;;;;;;AAClC;KAFgB","debugId":null}},
    {"offset": {"line": 158, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/nanac/INFINITIA/CMS/client/src/app/layout.tsx"],"sourcesContent":["\"use client\";\nimport \"./globals.css\";\nimport { Providers } from \"@/state/Providers\";\n\nexport default function RootLayout({ children }: { children: React.ReactNode }) {\n  return (\n    <html lang=\"en\">\n      <body>\n        <Providers>{children}</Providers>\n      </body>\n    </html>\n  );\n}\n"],"names":[],"mappings":";;;;;AAEA;AAFA;;;;AAIe,SAAS,WAAW,KAA2C;QAA3C,EAAE,QAAQ,EAAiC,GAA3C;IACjC,qBACE,uMAAC;QAAK,MAAK;kBACT,cAAA,uMAAC;sBACC,cAAA,uMAAC,oJAAS;0BAAE;;;;;;;;;;;;;;;;AAIpB;KARwB","debugId":null}}]
}