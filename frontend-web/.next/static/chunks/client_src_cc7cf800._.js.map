{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/nanac/INFINITIA/CMS/client/src/state/globalSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\nexport interface GlobalState {\r\n  isSidebarCollapsed: boolean;\r\n  isDarkMode: boolean;\r\n}\r\n\r\nconst initialState: GlobalState = {\r\n  isSidebarCollapsed: false,\r\n  isDarkMode: false,\r\n};\r\n\r\nconst globalSlice = createSlice({\r\n  name: \"global\",\r\n  initialState,\r\n  reducers: {\r\n    setIsSidebarCollapsed: (state, action: PayloadAction<boolean>) => {\r\n      state.isSidebarCollapsed = action.payload;\r\n    },\r\n    toggleSidebar: (state) => {\r\n      state.isSidebarCollapsed = !state.isSidebarCollapsed;\r\n    },\r\n    setIsDarkMode: (state, action: PayloadAction<boolean>) => {\r\n      state.isDarkMode = action.payload;\r\n    },\r\n    toggleDarkMode: (state) => {\r\n      state.isDarkMode = !state.isDarkMode;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setIsSidebarCollapsed,\r\n  toggleSidebar,\r\n  setIsDarkMode,\r\n  toggleDarkMode,\r\n} = globalSlice.actions;\r\n\r\nexport default globalSlice.reducer;\r\n"],"names":[],"mappings":";;;;;;;;;;;;AAAA;;AAOA,MAAM,eAA4B;IAChC,oBAAoB;IACpB,YAAY;AACd;AAEA,MAAM,cAAc,IAAA,uNAAW,EAAC;IAC9B,MAAM;IACN;IACA,UAAU;QACR,uBAAuB,CAAC,OAAO;YAC7B,MAAM,kBAAkB,GAAG,OAAO,OAAO;QAC3C;QACA,eAAe,CAAC;YACd,MAAM,kBAAkB,GAAG,CAAC,MAAM,kBAAkB;QACtD;QACA,eAAe,CAAC,OAAO;YACrB,MAAM,UAAU,GAAG,OAAO,OAAO;QACnC;QACA,gBAAgB,CAAC;YACf,MAAM,UAAU,GAAG,CAAC,MAAM,UAAU;QACtC;IACF;AACF;AAEO,MAAM,EACX,qBAAqB,EACrB,aAAa,EACb,aAAa,EACb,cAAc,EACf,GAAG,YAAY,OAAO;uCAER,YAAY,OAAO","debugId":null}},
    {"offset": {"line": 49, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/nanac/INFINITIA/CMS/client/src/components/Sidebar/index.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport * as Tooltip from \"@radix-ui/react-tooltip\";\r\nimport {\r\n  BookOpen,\r\n  Calendar,\r\n  Church,\r\n  DollarSign,\r\n  Layout,\r\n  LucideIcon,\r\n  Menu,\r\n  SlidersHorizontal,\r\n  Users,\r\n} from \"lucide-react\";\r\n\r\nimport Link from \"next/link\";\r\nimport { usePathname } from \"next/navigation\";\r\nimport React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"@/state/store\";   // <-- adjust import path\r\nimport { toggleSidebar } from \"@/state/globalSlice\"; // <-- adjust import path\r\n\r\ninterface SidebarLinkProps {\r\n  href: string;\r\n  icon: LucideIcon;\r\n  label: string;\r\n  isCollapsed: boolean;\r\n}\r\n\r\nconst SidebarLink = ({ href, icon: Icon, label, isCollapsed }: SidebarLinkProps) => {\r\n  const pathname = usePathname();\r\n  const isActive = pathname === href || (pathname === \"/\" && href === \"/dashboard\");\r\n\r\n  const linkContent = (\r\n    <div\r\n      className={`cursor-pointer flex items-center ${\r\n        isCollapsed ? \"justify-center py-4\" : \"justify-start px-8 py-4\"\r\n      }\r\n      hover:text-blue-500 hover:bg-blue-100 gap-3 transition-colors ${\r\n        isActive ? \"bg-blue-200 text-white\" : \"\"\r\n      }`}\r\n    >\r\n      <Icon className=\"w-6 h-6 !text-gray-700\" />\r\n      {!isCollapsed && <span className=\"font-medium text-gray-700\">{label}</span>}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Link href={href}>\r\n      {isCollapsed ? (\r\n        <Tooltip.Provider delayDuration={200}>\r\n          <Tooltip.Root>\r\n            <Tooltip.Trigger asChild>{linkContent}</Tooltip.Trigger>\r\n            <Tooltip.Content\r\n              side=\"right\"\r\n              className=\"bg-gray-900 text-white px-2 py-1 rounded text-sm shadow-lg\"\r\n            >\r\n              {label}\r\n              <Tooltip.Arrow className=\"fill-gray-900\" />\r\n            </Tooltip.Content>\r\n          </Tooltip.Root>\r\n        </Tooltip.Provider>\r\n      ) : (\r\n        linkContent\r\n      )}\r\n    </Link>\r\n  );\r\n};\r\n\r\nconst Sidebar = () => {\r\n  const dispatch = useDispatch();\r\n  const isSidebarCollapsed = useSelector(\r\n    (state: RootState) => state.global.isSidebarCollapsed\r\n  );\r\n\r\n  const sidebarClassNames = `fixed flex flex-col ${\r\n    isSidebarCollapsed ? \"w-16\" : \"w-72\"\r\n  } bg-white transition-all duration-300 h-full shadow-md z-40`;\r\n\r\n  return (\r\n    <div className={sidebarClassNames}>\r\n      {/* TOP LOGO + TOGGLE */}\r\n      <div\r\n        className={`flex gap-3 justify-between items-center pt-8 ${\r\n          isSidebarCollapsed ? \"px-2\" : \"px-6\"\r\n        }`}\r\n      >\r\n        {!isSidebarCollapsed && <h1 className=\"font-extrabold text-2xl\">Church CMS</h1>}\r\n\r\n        <button\r\n          className=\"px-3 py-3 bg-gray-100 rounded-full hover:bg-blue-100\"\r\n          onClick={() => dispatch(toggleSidebar())}\r\n        >\r\n          <Menu className=\"w-4 h-4\" />\r\n        </button>\r\n      </div>\r\n\r\n      {/* LINKS */}\r\n      <div className=\"flex-grow mt-8\">\r\n        <SidebarLink href=\"/dashboard\" icon={Layout} label=\"Dashboard\" isCollapsed={isSidebarCollapsed} />\r\n        <SidebarLink href=\"/members\" icon={Users} label=\"Members\" isCollapsed={isSidebarCollapsed} />\r\n        <SidebarLink href=\"/events\" icon={Calendar} label=\"Events\" isCollapsed={isSidebarCollapsed} />\r\n        <SidebarLink href=\"/ministries\" icon={Church} label=\"Ministries\" isCollapsed={isSidebarCollapsed} />\r\n        <SidebarLink href=\"/sermons\" icon={BookOpen} label=\"Sermons\" isCollapsed={isSidebarCollapsed} />\r\n        <SidebarLink href=\"/finances\" icon={DollarSign} label=\"Finances\" isCollapsed={isSidebarCollapsed} />\r\n        <SidebarLink href=\"/settings\" icon={SlidersHorizontal} label=\"Settings\" isCollapsed={isSidebarCollapsed} />\r\n      </div>\r\n\r\n      {/* FOOTER */}\r\n      {!isSidebarCollapsed && (\r\n        <div className=\"mb-10\">\r\n          <p className=\"text-center text-xs text-gray-500\">\r\n            &copy; {new Date().getFullYear()} Church CMS\r\n          </p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AAEA;AAEA,+OAAqD,yBAAyB;;;AApB9E;;;;;;;AA6BA,MAAM,cAAc;QAAC,EAAE,IAAI,EAAE,MAAM,IAAI,EAAE,KAAK,EAAE,WAAW,EAAoB;;IAC7E,MAAM,WAAW,IAAA,8JAAW;IAC5B,MAAM,WAAW,aAAa,QAAS,aAAa,OAAO,SAAS;IAEpE,MAAM,4BACJ,uMAAC;QACC,WAAW,AAAC,oCAIV,OAHA,cAAc,wBAAwB,2BACvC,0EAGA,OADC,WAAW,2BAA2B;;0BAGxC,uMAAC;gBAAK,WAAU;;;;;;YACf,CAAC,6BAAe,uMAAC;gBAAK,WAAU;0BAA6B;;;;;;;;;;;;IAIlE,qBACE,uMAAC,oLAAI;QAAC,MAAM;kBACT,4BACC,uMAAC,4LAAgB;YAAC,eAAe;sBAC/B,cAAA,uMAAC,wLAAY;;kCACX,uMAAC,2LAAe;wBAAC,OAAO;kCAAE;;;;;;kCAC1B,uMAAC,2LAAe;wBACd,MAAK;wBACL,WAAU;;4BAET;0CACD,uMAAC,yLAAa;gCAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;uDAK/B;;;;;;AAIR;GAtCM;;QACa,8JAAW;;;KADxB;AAwCN,MAAM,UAAU;;IACd,MAAM,WAAW,IAAA,qLAAW;IAC5B,MAAM,qBAAqB,IAAA,qLAAW;mDACpC,CAAC,QAAqB,MAAM,MAAM,CAAC,kBAAkB;;IAGvD,MAAM,oBAAoB,AAAC,uBAE1B,OADC,qBAAqB,SAAS,QAC/B;IAED,qBACE,uMAAC;QAAI,WAAW;;0BAEd,uMAAC;gBACC,WAAW,AAAC,gDAEX,OADC,qBAAqB,SAAS;;oBAG/B,CAAC,oCAAsB,uMAAC;wBAAG,WAAU;kCAA0B;;;;;;kCAEhE,uMAAC;wBACC,WAAU;wBACV,SAAS,IAAM,SAAS,IAAA,yJAAa;kCAErC,cAAA,uMAAC,uNAAI;4BAAC,WAAU;;;;;;;;;;;;;;;;;0BAKpB,uMAAC;gBAAI,WAAU;;kCACb,uMAAC;wBAAY,MAAK;wBAAa,MAAM,4OAAM;wBAAE,OAAM;wBAAY,aAAa;;;;;;kCAC5E,uMAAC;wBAAY,MAAK;wBAAW,MAAM,0NAAK;wBAAE,OAAM;wBAAU,aAAa;;;;;;kCACvE,uMAAC;wBAAY,MAAK;wBAAU,MAAM,mOAAQ;wBAAE,OAAM;wBAAS,aAAa;;;;;;kCACxE,uMAAC;wBAAY,MAAK;wBAAc,MAAM,6NAAM;wBAAE,OAAM;wBAAa,aAAa;;;;;;kCAC9E,uMAAC;wBAAY,MAAK;wBAAW,MAAM,uOAAQ;wBAAE,OAAM;wBAAU,aAAa;;;;;;kCAC1E,uMAAC;wBAAY,MAAK;wBAAY,MAAM,6OAAU;wBAAE,OAAM;wBAAW,aAAa;;;;;;kCAC9E,uMAAC;wBAAY,MAAK;wBAAY,MAAM,kQAAiB;wBAAE,OAAM;wBAAW,aAAa;;;;;;;;;;;;YAItF,CAAC,oCACA,uMAAC;gBAAI,WAAU;0BACb,cAAA,uMAAC;oBAAE,WAAU;;wBAAoC;wBACvC,IAAI,OAAO,WAAW;wBAAG;;;;;;;;;;;;;;;;;;AAM7C;IAjDM;;QACa,qLAAW;QACD,qLAAW;;;MAFlC;uCAmDS","debugId":null}},
    {"offset": {"line": 325, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/nanac/INFINITIA/CMS/client/src/components/Navbar/index.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { Bell, Menu, Settings } from \"lucide-react\";\r\nimport Link from \"next/link\";\r\nimport React from \"react\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <div className=\"flex justify-between items-center w-full mb-7\">\r\n      {/* LEFT SIDE */}\r\n      <div className=\"flex justify-between items-center gap-5\">\r\n        <button\r\n          className=\"px-3 py-3 bg-gray-100 rounded-full hover:bg-blue-100\"\r\n        >\r\n          <Menu className=\"w-4 h-4\" />\r\n        </button>\r\n\r\n        <div className=\"relative\">\r\n          <input\r\n            type=\"search\"\r\n            placeholder=\"Start typing to search groups & products\"\r\n            className=\"pl-10 pr-4 py-2 w-50 md:w-60 border-2 border-gray-300 bg-white rounded-lg focus:outline-none focus:border-blue-500\"\r\n          />\r\n\r\n          <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n            <Bell className=\"text-gray-500\" size={20} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* RIGHT SIDE */}\r\n      <div className=\"flex justify-between items-center gap-5\">\r\n        <div className=\"hidden md:flex justify-between items-center gap-5\">\r\n          <div className=\"relative\">\r\n            <Bell className=\"cursor-pointer text-gray-500\" size={24} />\r\n            <span className=\"absolute -top-2 -right-2 inline-flex items-center justify-center px-[0.4rem] py-1 text-xs font-semibold leading-none text-red-100 bg-red-400 rounded-full\">\r\n              3\r\n            </span>\r\n          </div>\r\n          <hr className=\"w-0 h-7 border border-solid border-l border-gray-300 mx-3\" />\r\n          <div className=\"flex items-center gap-3 cursor-pointer\">\r\n        \r\n            <span className=\"font-semibold\">Ed Roh</span>\r\n          </div>\r\n        </div>\r\n        <Link href=\"/settings\">\r\n          <Settings className=\"cursor-pointer text-gray-500\" size={24} />\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n"],"names":[],"mappings":";;;;;AAEA;AAAA;AAAA;AACA;AAHA;;;;AAMA,MAAM,SAAS;IACb,qBACE,uMAAC;QAAI,WAAU;;0BAEb,uMAAC;gBAAI,WAAU;;kCACb,uMAAC;wBACC,WAAU;kCAEV,cAAA,uMAAC,uNAAI;4BAAC,WAAU;;;;;;;;;;;kCAGlB,uMAAC;wBAAI,WAAU;;0CACb,uMAAC;gCACC,MAAK;gCACL,aAAY;gCACZ,WAAU;;;;;;0CAGZ,uMAAC;gCAAI,WAAU;0CACb,cAAA,uMAAC,uNAAI;oCAAC,WAAU;oCAAgB,MAAM;;;;;;;;;;;;;;;;;;;;;;;0BAM5C,uMAAC;gBAAI,WAAU;;kCACb,uMAAC;wBAAI,WAAU;;0CACb,uMAAC;gCAAI,WAAU;;kDACb,uMAAC,uNAAI;wCAAC,WAAU;wCAA+B,MAAM;;;;;;kDACrD,uMAAC;wCAAK,WAAU;kDAA4J;;;;;;;;;;;;0CAI9K,uMAAC;gCAAG,WAAU;;;;;;0CACd,uMAAC;gCAAI,WAAU;0CAEb,cAAA,uMAAC;oCAAK,WAAU;8CAAgB;;;;;;;;;;;;;;;;;kCAGpC,uMAAC,oLAAI;wBAAC,MAAK;kCACT,cAAA,uMAAC,mOAAQ;4BAAC,WAAU;4BAA+B,MAAM;;;;;;;;;;;;;;;;;;;;;;;AAKnE;KA7CM;uCA+CS","debugId":null}},
    {"offset": {"line": 496, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/nanac/INFINITIA/CMS/client/src/state/api.ts"],"sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\nexport const api = createApi({\r\n  reducerPath: \"api\",\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: process.env.NEXT_PUBLIC_API_BASE_URL || \"http://localhost:8080\", // your Go backend\r\n  }),\r\n  tagTypes: [\r\n    \"Auth\",\r\n    \"Members\",\r\n    \"Leaders\",\r\n    \"Groups\",\r\n    \"Attendance\",\r\n    \"Events\",\r\n    \"Donations\",\r\n    \"Expenses\",\r\n    \"Announcements\",\r\n    \"DashboardMetrics\",\r\n  ],\r\n  endpoints: (builder) => ({\r\n    // We’ll add actual queries/mutations later\r\n    getMembers: builder.query<any[], void>({\r\n      query: () => \"/members\",\r\n      providesTags: [\"Members\"],\r\n    }),\r\n    getEvents: builder.query<any[], void>({\r\n      query: () => \"/events\",\r\n      providesTags: [\"Events\"],\r\n    }),\r\n    // etc...\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useGetMembersQuery,\r\n  useGetEventsQuery,\r\n} = api;\r\n"],"names":[],"mappings":";;;;;;;;AAKa;AALb;AAAA;;AAEO,MAAM,MAAM,IAAA,4OAAS,EAAC;IAC3B,aAAa;IACb,WAAW,IAAA,+MAAc,EAAC;QACxB,SAAS,qLAAO,CAAC,GAAG,CAAC,wBAAwB,IAAI;IACnD;IACA,UAAU;QACR;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IACD,WAAW,CAAC,UAAY,CAAC;YACvB,2CAA2C;YAC3C,YAAY,QAAQ,KAAK,CAAc;gBACrC,OAAO,IAAM;gBACb,cAAc;oBAAC;iBAAU;YAC3B;YACA,WAAW,QAAQ,KAAK,CAAc;gBACpC,OAAO,IAAM;gBACb,cAAc;oBAAC;iBAAS;YAC1B;QAEF,CAAC;AACH;AAEO,MAAM,EACX,kBAAkB,EAClB,iBAAiB,EAClB,GAAG","debugId":null}},
    {"offset": {"line": 549, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/nanac/INFINITIA/CMS/client/src/state/store.ts"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { api } from \"./api\";\r\nimport globalReducer from \"./globalSlice\";\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    [api.reducerPath]: api.reducer,\r\n    global: globalReducer,\r\n  },\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware().concat(api.middleware),\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;AAEO,MAAM,QAAQ,IAAA,0NAAc,EAAC;IAClC,SAAS;QACP,CAAC,uIAAG,CAAC,WAAW,CAAC,EAAE,uIAAG,CAAC,OAAO;QAC9B,QAAQ,mJAAa;IACvB;IACA,YAAY,CAAC,uBACX,uBAAuB,MAAM,CAAC,uIAAG,CAAC,UAAU;AAChD","debugId":null}},
    {"offset": {"line": 573, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/nanac/INFINITIA/CMS/client/src/state/Providers.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"@/state/store\";\r\n\r\nexport function Providers({ children }: { children: React.ReactNode }) {\r\n  return <Provider store={store}>{children}</Provider>;\r\n}\r\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAHA;;;;AAKO,SAAS,UAAU,KAA2C;QAA3C,EAAE,QAAQ,EAAiC,GAA3C;IACxB,qBAAO,uMAAC,kLAAQ;QAAC,OAAO,2IAAK;kBAAG;;;;;;AAClC;KAFgB","debugId":null}}]
}